Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2018.3 (win64) Build 2405991 Thu Dec  6 23:38:27 MST 2018
| Date         : Thu Jan 16 22:10:54 2020
| Host         : DESKTOP-FEIK2JA running 64-bit major release  (build 9200)
| Command      : report_drc -file Main_vivado_drc_routed.rpt -pb Main_vivado_drc_routed.pb -rpx Main_vivado_drc_routed.rpx
| Design       : Main_vivado
| Device       : xczu7ev-ffvc1156-2-e
| Speed File   : -2
| Design State : Fully Routed
---------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 23
+--------+------------------+----------------------------+------------+
| Rule   | Severity         | Description                | Violations |
+--------+------------------+----------------------------+------------+
| NSTD-1 | Critical Warning | Unspecified I/O Standard   | 1          |
| UCIO-1 | Critical Warning | Unconstrained Logical Port | 1          |
| DPIP-2 | Warning          | Input pipelining           | 8          |
| DPOP-3 | Warning          | PREG Output pipelining     | 6          |
| DPOP-4 | Warning          | MREG Output pipelining     | 7          |
+--------+------------------+----------------------------+------------+

2. REPORT DETAILS
-----------------
NSTD-1#1 Critical Warning
Unspecified I/O Standard  
298 out of 298 logical ports use I/O standard (IOSTANDARD) value 'DEFAULT', instead of a user assigned specific value. This may cause I/O contention or incompatibility with the board power or connectivity affecting performance, signal integrity or in extreme cases cause damage to the device or the components to which it is connected. To correct this violation, specify all I/O standards. This design will fail to generate a bitstream unless all logical ports have a user specified I/O standard value defined. To allow bitstream creation with unspecified I/O standard values (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks NSTD-1].  NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. Problem ports: input_ad[63:0], input_as[31:0], input_bd[63:0], input_bs[31:0], output_zd[63:0], output_zs[31:0], process[1:0], fpga_clk, input_a_ack, input_a_stb, input_b_ack, input_b_stb, output_z_ack, output_z_stb, rst (the first 15 of 15 listed).
Related violations: <none>

UCIO-1#1 Critical Warning
Unconstrained Logical Port  
298 out of 298 logical ports have no user assigned specific location constraint (LOC). This may cause I/O contention or incompatibility with the board power or connectivity affecting performance, signal integrity or in extreme cases cause damage to the device or the components to which it is connected. To correct this violation, specify all pin locations. This design will fail to generate a bitstream unless all logical ports have a user specified site LOC constraint defined.  To allow bitstream creation with unspecified pin locations (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks UCIO-1].  NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run.  Problem ports: input_ad[63:0], input_as[31:0], input_bd[63:0], input_bs[31:0], output_zd[63:0], output_zs[31:0], process[1:0], fpga_clk, input_a_ack, input_a_stb, input_b_ack, input_b_stb, output_z_ack, output_z_stb, rst (the first 15 of 15 listed).
Related violations: <none>

DPIP-2#1 Warning
Input pipelining  
DSP double_divider_newton_instance/multiplier_0/product1 input double_divider_newton_instance/multiplier_0/product1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#2 Warning
Input pipelining  
DSP double_divider_newton_instance/multiplier_0/product1__0 input double_divider_newton_instance/multiplier_0/product1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#3 Warning
Input pipelining  
DSP double_divider_newton_instance/multiplier_0/product1__1 input double_divider_newton_instance/multiplier_0/product1__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#4 Warning
Input pipelining  
DSP double_divider_newton_instance/multiplier_0/product1__2 input double_divider_newton_instance/multiplier_0/product1__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#5 Warning
Input pipelining  
DSP double_divider_newton_instance/multiplier_0/product1__4 input double_divider_newton_instance/multiplier_0/product1__4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#6 Warning
Input pipelining  
DSP single_divider_newton_instance/multiplier_0/product1 input single_divider_newton_instance/multiplier_0/product1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#7 Warning
Input pipelining  
DSP single_divider_newton_instance/multiplier_0/product1__0 input single_divider_newton_instance/multiplier_0/product1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#8 Warning
Input pipelining  
DSP single_divider_newton_instance/multiplier_0/product1__0 input single_divider_newton_instance/multiplier_0/product1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-3#1 Warning
PREG Output pipelining  
DSP double_divider_newton_instance/multiplier_0/product1__0 output double_divider_newton_instance/multiplier_0/product1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#2 Warning
PREG Output pipelining  
DSP double_divider_newton_instance/multiplier_0/product1__1 output double_divider_newton_instance/multiplier_0/product1__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#3 Warning
PREG Output pipelining  
DSP double_divider_newton_instance/multiplier_0/product1__4 output double_divider_newton_instance/multiplier_0/product1__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#4 Warning
PREG Output pipelining  
DSP double_divider_newton_instance/multiplier_0/product1__5 output double_divider_newton_instance/multiplier_0/product1__5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#5 Warning
PREG Output pipelining  
DSP double_divider_newton_instance/multiplier_0/product1__7 output double_divider_newton_instance/multiplier_0/product1__7/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#6 Warning
PREG Output pipelining  
DSP single_divider_newton_instance/multiplier_0/product1 output single_divider_newton_instance/multiplier_0/product1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-4#1 Warning
MREG Output pipelining  
DSP double_divider_newton_instance/multiplier_0/product1__0 multiplier stage double_divider_newton_instance/multiplier_0/product1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#2 Warning
MREG Output pipelining  
DSP double_divider_newton_instance/multiplier_0/product1__1 multiplier stage double_divider_newton_instance/multiplier_0/product1__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#3 Warning
MREG Output pipelining  
DSP double_divider_newton_instance/multiplier_0/product1__4 multiplier stage double_divider_newton_instance/multiplier_0/product1__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#4 Warning
MREG Output pipelining  
DSP double_divider_newton_instance/multiplier_0/product1__5 multiplier stage double_divider_newton_instance/multiplier_0/product1__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#5 Warning
MREG Output pipelining  
DSP double_divider_newton_instance/multiplier_0/product1__7 multiplier stage double_divider_newton_instance/multiplier_0/product1__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#6 Warning
MREG Output pipelining  
DSP single_divider_newton_instance/multiplier_0/product1 multiplier stage single_divider_newton_instance/multiplier_0/product1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#7 Warning
MREG Output pipelining  
DSP single_divider_newton_instance/multiplier_0/product1__0 multiplier stage single_divider_newton_instance/multiplier_0/product1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>


